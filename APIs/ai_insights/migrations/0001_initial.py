# Generated by Django 5.1.11 on 2025-07-16 22:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        ('visits', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_type', models.CharField(choices=[('insight_generation', 'Insight Generation'), ('risk_assessment', 'Risk Assessment'), ('trend_analysis', 'Trend Analysis'), ('decision_support', 'Decision Support'), ('document_analysis', 'Document Analysis'), ('data_extraction', 'Data Extraction')], max_length=50)),
                ('model_used', models.CharField(max_length=100)),
                ('input_data_size', models.IntegerField(help_text='Size of input data in bytes')),
                ('processing_time_seconds', models.FloatField()),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('output_summary', models.JSONField(default=dict)),
                ('tokens_used', models.IntegerField(blank=True, null=True)),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-completed_at'],
            },
        ),
        migrations.CreateModel(
            name='ClinicalDecisionSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_type', models.CharField(choices=[('medication_adjustment', 'Medication Adjustment'), ('care_plan_modification', 'Care Plan Modification'), ('referral_recommendation', 'Referral Recommendation'), ('diagnostic_suggestion', 'Diagnostic Suggestion'), ('intervention_recommendation', 'Intervention Recommendation'), ('monitoring_frequency', 'Monitoring Frequency')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('recommendation', models.TextField()),
                ('rationale', models.TextField()),
                ('evidence_level', models.CharField(choices=[('high', 'High Quality Evidence'), ('moderate', 'Moderate Quality Evidence'), ('low', 'Low Quality Evidence'), ('expert_opinion', 'Expert Opinion/AI Analysis')], max_length=20)),
                ('current_status', models.TextField()),
                ('proposed_changes', models.JSONField(default=list)),
                ('expected_outcomes', models.JSONField(default=list)),
                ('potential_risks', models.JSONField(default=list)),
                ('urgency', models.CharField(choices=[('immediate', 'Immediate'), ('within_24h', 'Within 24 Hours'), ('within_week', 'Within Week'), ('next_visit', 'Next Visit'), ('routine', 'Routine')], max_length=20)),
                ('requires_md_approval', models.BooleanField(default=True)),
                ('implementation_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('implemented', 'Implemented'), ('declined', 'Declined'), ('modified', 'Modified')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decision_support', to='patients.patient')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='visits.visit')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('risk_assessment', 'Risk Assessment'), ('trend_analysis', 'Trend Analysis'), ('anomaly_detection', 'Anomaly Detection'), ('medication_interaction', 'Medication Interaction'), ('care_gap', 'Care Gap'), ('documentation_suggestion', 'Documentation Suggestion'), ('provider_communication', 'Provider Communication'), ('quality_indicator', 'Quality Indicator')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
                ('priority_score', models.FloatField(default=0.0, help_text='0-1 scale, 1 being highest priority')),
                ('confidence_score', models.FloatField(default=0.0, help_text='0-1 scale, 1 being highest confidence')),
                ('model_used', models.CharField(help_text='AI model that generated this insight', max_length=100)),
                ('model_version', models.CharField(blank=True, max_length=50)),
                ('data_sources', models.JSONField(default=list, help_text='List of data sources used for this insight')),
                ('evidence', models.JSONField(default=dict, help_text='Supporting evidence and data points')),
                ('is_actionable', models.BooleanField(default=True)),
                ('recommended_actions', models.JSONField(default=list, help_text='List of recommended actions')),
                ('urgency_level', models.CharField(choices=[('immediate', 'Immediate'), ('within_24h', 'Within 24 Hours'), ('within_week', 'Within Week'), ('routine', 'Routine')], default='routine', max_length=20)),
                ('status', models.CharField(choices=[('new', 'New'), ('reviewed', 'Reviewed'), ('acted_upon', 'Acted Upon'), ('dismissed', 'Dismissed'), ('resolved', 'Resolved')], default='new', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this insight becomes outdated', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='patients.patient')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_insights', to=settings.AUTH_USER_MODEL)),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='visits.visit')),
            ],
            options={
                'ordering': ['-priority_score', '-created_at'],
                'indexes': [models.Index(fields=['patient', 'insight_type'], name='ai_insights_patient_069c33_idx'), models.Index(fields=['risk_level', 'status'], name='ai_insights_risk_le_46a7b2_idx'), models.Index(fields=['created_at', 'priority_score'], name='ai_insights_created_acd968_idx')],
            },
        ),
        migrations.CreateModel(
            name='PatientTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(help_text='Name of the metric being tracked', max_length=100)),
                ('metric_category', models.CharField(choices=[('vital_signs', 'Vital Signs'), ('functional_status', 'Functional Status'), ('pain_levels', 'Pain Levels'), ('medication_adherence', 'Medication Adherence'), ('mobility', 'Mobility'), ('cognitive_status', 'Cognitive Status'), ('wound_healing', 'Wound Healing'), ('lab_values', 'Lab Values')], max_length=50)),
                ('trend_direction', models.CharField(choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining'), ('fluctuating', 'Fluctuating')], max_length=20)),
                ('trend_strength', models.FloatField(help_text='Strength of trend, 0-1 scale')),
                ('statistical_significance', models.FloatField(blank=True, help_text='P-value if applicable', null=True)),
                ('data_points', models.JSONField(default=list, help_text='Time series data points')),
                ('analysis_period_days', models.IntegerField(default=30)),
                ('ai_interpretation', models.TextField(help_text='AI-generated interpretation of the trend')),
                ('clinical_significance', models.TextField(help_text='Clinical significance of this trend')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_analyzed', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trends', to='patients.patient')),
            ],
            options={
                'ordering': ['-trend_strength', '-updated_at'],
                'unique_together': {('patient', 'metric_name', 'metric_category')},
            },
        ),
        migrations.CreateModel(
            name='RiskPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_type', models.CharField(choices=[('fall_risk', 'Fall Risk'), ('readmission_risk', 'Readmission Risk'), ('deterioration_risk', 'Deterioration Risk'), ('medication_adverse_event', 'Medication Adverse Event'), ('infection_risk', 'Infection Risk'), ('mortality_risk', 'Mortality Risk'), ('non_adherence_risk', 'Non-adherence Risk')], max_length=50)),
                ('risk_score', models.FloatField(help_text='Risk score 0-1, 1 being highest risk')),
                ('risk_category', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('confidence_interval', models.JSONField(default=dict, help_text='Confidence intervals for the prediction')),
                ('model_name', models.CharField(max_length=100)),
                ('model_accuracy', models.FloatField(blank=True, help_text='Model accuracy on validation set', null=True)),
                ('feature_importance', models.JSONField(default=dict, help_text='Most important features for this prediction')),
                ('risk_factors', models.JSONField(default=list, help_text='List of risk factors identified')),
                ('protective_factors', models.JSONField(default=list, help_text='List of protective factors identified')),
                ('prevention_strategies', models.JSONField(default=list, help_text='AI-recommended prevention strategies')),
                ('monitoring_recommendations', models.JSONField(default=list, help_text='What to monitor closely')),
                ('is_validated', models.BooleanField(default=False)),
                ('validation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this prediction expires')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_predictions', to='patients.patient')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-risk_score', '-created_at'],
                'indexes': [models.Index(fields=['patient', 'risk_type'], name='ai_insights_patient_e8ba71_idx'), models.Index(fields=['risk_category', 'created_at'], name='ai_insights_risk_ca_b7691e_idx')],
            },
        ),
    ]
